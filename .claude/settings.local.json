{
  "permissions": {
    "allow": [
      "Bash(java:*)",
      "Bash(mvn:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(AWS_PROFILE=amoure terraform output)",
      "Bash(jar:*)",
      "Read(//Users/haowang/.m2/repository/com/openai/**)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(terraform workspace:*)",
      "Bash(export AWS_PROFILE=amoure)",
      "Bash(aws sts:*)",
      "Bash(aws configure:*)",
      "Bash(export AWS_ACCESS_KEY_ID=ASIAXCQBOBX7QFYO2UPM)",
      "Bash(terraform output:*)",
      "Bash(aws ecs describe-services:*)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws logs get-log-events:*)",
      "Bash(aws ecs describe-task-definition:*)",
      "Bash(aws ecr describe-images:*)",
      "Bash(aws ecs update-service:*)",
      "Bash(curl:*)",
      "Bash(aws logs tail:*)",
      "Bash(aws ecs list-tasks:*)",
      "Bash(aws ecs describe-tasks:*)",
      "Bash(grep:*)",
      "Bash(terraform plan:*)",
      "Bash(AWS_PROFILE=amoure ./build-and-push.sh --app-only)",
      "Bash(export AWS_ACCESS_KEY_ID=ASIAXCQBOBX7WCOBHMHF)",
      "Bash(terraform apply:*)",
      "Bash(./build-and-push.sh:*)",
      "Bash(docker build:*)",
      "Bash(DOCKER_BUILD_OPTS=\"--platform linux/amd64\" ./build-and-push.sh --app-only)",
      "Bash(docker tag:*)",
      "Bash(aws ecr get-login-password:*)",
      "Bash(docker login:*)",
      "Bash(docker push:*)",
      "Bash(DOCKER_BUILD_OPTS=\"--platform linux/amd64\" docker build --platform linux/amd64 -t 486408064511.dkr.ecr.us-east-1.amazonaws.com/amoure/amoure-app:latest .)",
      "Bash(terraform force-unlock:*)",
      "Bash(aws elasticache describe-replication-groups:*)",
      "Bash(aws secretsmanager put-secret-value:*)",
      "Bash(aws secretsmanager get-secret-value:*)",
      "Bash(aws iam get-role:*)",
      "Bash(aws iam list-attached-role-policies:*)",
      "Bash(aws iam list-role-policies:*)",
      "Bash(aws secretsmanager describe-secret:*)",
      "Bash(export AWS_ACCESS_KEY_ID=ASIAXCQBOBX7TSWWREPU)",
      "Bash(aws ecs register-task-definition:*)",
      "Bash(DOCKER_BUILD_OPTS=\"--platform linux/amd64\" ./infrastructure/scripts/build-and-push.sh --app-only)",
      "Bash(for file in UserPhotoMapper.java UserProfileMapper.java UserReportMapper.java WorkOrderMapper.java)",
      "Bash(do mv \"$file\" \"$file%.javaV2.java\")",
      "Bash(done)",
      "Bash(sed:*)",
      "Bash(aws ecr describe-repositories:*)",
      "Bash(AWS_PROFILE=amoure bash:*)",
      "Bash(aws elbv2 describe-load-balancers:*)",
      "Bash(npx:*)",
      "Bash(claude mcp add @wonderwhy-er/desktop-commander@latest)",
      "Bash(claude mcp:*)",
      "mcp__desktop-commander__start_process",
      "mcp__desktop-commander__start_search",
      "mcp__desktop-commander__get_more_search_results",
      "mcp__desktop-commander__list_directory",
      "mcp__desktop-commander__read_file",
      "mcp__desktop-commander__edit_block",
      "mcp__desktop-commander__write_file",
      "mcp__desktop-commander__create_directory",
      "Bash(mv:*)",
      "mcp__exa__web_search_exa",
      "Bash(rm:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(docker:*)",
      "Bash(aws:*)",
      "Bash(AWS_PROFILE=amoure ./infrastructure/scripts/build-and-push.sh --app-only)",
      "Bash(AWS_PROFILE=amoure terraform plan)",
      "Bash(export AWS_ACCESS_KEY_ID=ASIAXCQBOBX7ZB2ZJYPO)",
      "Bash(./scripts/run-tests.sh:*)",
      "Bash(createdb:*)",
      "Bash(psql:*)",
      "mcp__desktop-commander__interact_with_process",
      "Bash(terraform state:*)",
      "Bash(export AWS_SECRET_ACCESS_KEY='ZLB9Jhe0+ZZ/LKkgv4bUBlKS+bLhHYDbB16uxpx7')",
      "mcp__desktop-commander__read_process_output",
      "mcp__desktop-commander__force_terminate",
      "mcp__desktop-commander__read_multiple_files",
      "Bash(python3:*)",
      "Bash(cp:*)",
      "Read(//private/tmp/**)",
      "Bash(AWS_PROFILE=amoure aws ecs update-service:*)",
      "Bash(AWS_PROFILE=amoure aws ecs list-clusters)",
      "Bash(AWS_PROFILE=amoure aws ecs list-services --cluster amoure-dev-cluster)",
      "Bash(AWS_PROFILE=amoure aws ecs describe-services --cluster amoure-dev-cluster --services amoure-dev-amoure-app --query 'services[0].deployments[?status==`PRIMARY`].{Status:status,DesiredCount:desiredCount,RunningCount:runningCount}')",
      "Bash(AWS_PROFILE=amoure aws logs tail /ecs/amoure-dev-amoure-app --since 5m)",
      "Bash(AWS_PROFILE=amoure aws logs describe-log-groups --log-group-name-prefix \"/ecs/amoure\" --query 'logGroups[].logGroupName')",
      "Bash(AWS_PROFILE=amoure aws logs tail \"/ecs/amoure-dev/amoure-app\" --since 5m)"
    ],
    "deny": [],
    "ask": []
  }
}