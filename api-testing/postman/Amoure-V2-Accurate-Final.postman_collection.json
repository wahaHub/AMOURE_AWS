{
    "info": {
        "name": "Amoure V2 APIs - Accurate Final",
        "description": "Complete V2 API collection based on real controller analysis",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "auth": {
        "type": "noauth"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://amoure-dev-alb-1565128266.us-east-1.elb.amazonaws.com",
            "type": "string"
        },
        {
            "key": "authToken",
            "value": "",
            "type": "string"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Auto-add V2 authentication header for all V2 API requests (except login)",
                    "const requestUrl = pm.request.url.toString();",
                    "if (requestUrl.includes('/api/v2/') && !requestUrl.includes('/api/v2/auth/login')) {",
                    "    const authToken = pm.environment.get('authToken');",
                    "    if (authToken) {",
                    "        pm.request.headers.add({",
                    "            key: 'satoken-v2',",
                    "            value: 'Bearer ' + authToken",
                    "        });",
                    "        console.log('✅ Auto-added V2 auth header for:', requestUrl);",
                    "    } else {",
                    "        console.log('⚠️ No authToken found for V2 request:', requestUrl);",
                    "    }",
                    "}"
                ]
            }
        }
    ],
    "item": [
        {
            "name": "V2 Authentication",
            "item": [
                {
                    "name": "Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"loginType\": \"1\",\n  \"mobile\": \"13800138000\",\n  \"verifyCode\": \"888888\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "auth",
                                "login"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// V2 Login - Auto extract token for V2 APIs",
                                    "const response = pm.response.json();",
                                    "if (response && response.success && response.data && response.data.tokenInfo) {",
                                    "    const tokenValue = response.data.tokenInfo.tokenValue;",
                                    "    pm.environment.set('authToken', tokenValue);",
                                    "    console.log('✅ V2 Token saved:', tokenValue.substring(0, 8) + '...');",
                                    "    console.log('✅ User ID:', response.data.userId);",
                                    "} else {",
                                    "    console.log('❌ Failed to extract token from V2 login response');",
                                    "}",
                                    "",
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "auth",
                                "logout"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Register Web",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPass123\",\n  \"nickname\": \"TestUser\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Deactivate Account",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/auth/deactivate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "auth",
                                "deactivate"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Update Activity",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/auth/activity",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "auth",
                                "activity"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 User Management",
            "item": [

                {
                    "name": "User Onboard",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"nickname\": \"MyNickname\",\n  \"birthday\": \"1990-01-01\",\n  \"gender\": \"1\",\n  \"profileImageUrl\": \"https://example.com/avatar.jpg\",\n  \"location\": \"Shanghai\",\n  \"idealPartnerAvatarUrl\": \"https://example.com/ideal-partner.jpg\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/user/onboard",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "user",
                                "onboard"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },

                {
                    "name": "Get Friend Detail",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/user/friend/15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "user",
                                "friend",
                                "15"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Interactions",
            "item": [
                {
                    "name": "User Interaction (like/super_like/pass/block)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"targetUserId\": 14,\n  \"interactionType\": \"like\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/interactions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "interactions"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Likes List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/interactions/likes?type=liked_by_me&cursor=1&limit=20",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "interactions",
                                "likes"
                            ],
                            "query": [
                                {
                                    "key": "type",
                                    "value": "liked_by_me",
                                    "description": "liked_by_me | i_liked | mutual_liked"
                                },
                                {
                                    "key": "cursor",
                                    "value": "1",
                                    "description": "Page number"
                                },
                                {
                                    "key": "limit",
                                    "value": "20",
                                    "description": "Items per page"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Blocks List",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/interactions/blocks?page=1&size=20",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "interactions",
                                "blocks"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "size",
                                    "value": "20"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Recommendation",
            "item": [
                {
                    "name": "Get Recommendations",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/recommendation",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "recommendation"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Conversation",
            "item": [

                {
                    "name": "Get IM Conversations",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/conversation/im?cursor=&limit=20",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "conversation",
                                "im"
                            ],
                            "query": [
                                {
                                    "key": "cursor",
                                    "value": ""
                                },
                                {
                                    "key": "limit",
                                    "value": "20"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Feed/Posts",
            "item": [
                {
                    "name": "Get Posts",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/feed?type=all&userId=&cursor=&limit=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "feed"
                            ],
                            "query": [
                                {
                                    "key": "type",
                                    "value": "all",
                                    "description": "all | user"
                                },
                                {
                                    "key": "userId",
                                    "value": "",
                                    "description": "Optional: specific user ID"
                                },
                                {
                                    "key": "cursor",
                                    "value": "",
                                    "description": "Optional: page cursor"
                                },
                                {
                                    "key": "limit",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Create Post",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"content\": \"This is my new post!\",\n  \"mediaUrls\": \"https://example.com/image.jpg\",\n  \"location\": \"Shanghai\",\n  \"tags\": \"lifestyle,dating\",\n  \"visibility\": 1\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/feed",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "feed"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Like Post",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/feed/{{postId}}/like",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "feed",
                                "{{postId}}",
                                "like"
                            ],
                            "variable": [
                                {
                                    "key": "postId",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Unlike Post",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/feed/{{postId}}/like",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "feed",
                                "{{postId}}",
                                "like"
                            ],
                            "variable": [
                                {
                                    "key": "postId",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Post",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/feed/{{postId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "feed",
                                "{{postId}}"
                            ],
                            "variable": [
                                {
                                    "key": "postId",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Question Options",
            "item": [
                {
                    "name": "Get Latest All Options",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/question-options/batchGetLatestAllOptions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "question-options",
                                "batchGetLatestAllOptions"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Options For Version",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/question-options/batchGetAllOptionsForVersion?version=1",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "question-options",
                                "batchGetAllOptionsForVersion"
                            ],
                            "query": [
                                {
                                    "key": "version",
                                    "value": "1",
                                    "description": "版本号"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "V2 Verification",
            "item": [
                {
                    "name": "Submit Identity Verification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"verificationType\": \"IDENTITY\",\n  \"description\": \"身份认证申请\",\n  \"verificationData\": {\n    \"realName\": \"张三\",\n    \"idType\": \"ID_CARD\",\n    \"idNumber\": \"110101199001011234\",\n    \"frontImageUrl\": \"https://example.com/id-front.jpg\",\n    \"backImageUrl\": \"https://example.com/id-back.jpg\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/submit?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "submit"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Submit School Verification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"verificationType\": \"SCHOOL\",\n  \"description\": \"学历认证申请\",\n  \"verificationData\": {\n    \"schoolName\": \"清华大学\",\n    \"educationLevel\": \"本科\",\n    \"major\": \"计算机科学\",\n    \"graduationYear\": \"2020\",\n    \"verifyMethod\": \"EMAIL\",\n    \"eduEmail\": \"zhangsan@mails.tsinghua.edu.cn\",\n    \"eduEmailCode\": \"123456\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/submit?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "submit"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Submit Company Verification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"verificationType\": \"COMPANY\",\n  \"description\": \"职业认证申请\",\n  \"verificationData\": {\n    \"companyName\": \"阿里巴巴\",\n    \"position\": \"高级工程师\",\n    \"verifyMethod\": \"EMAIL\",\n    \"workEmail\": \"zhangsan@alibaba-inc.com\",\n    \"workEmailCode\": \"123456\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/submit?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "submit"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Submit Income Verification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"verificationType\": \"INCOME\",\n  \"description\": \"收入认证申请\",\n  \"verificationData\": {\n    \"incomeRange\": \"50-100万\",\n    \"incomeSource\": \"SALARY\",\n    \"position\": \"技术总监\",\n    \"proofDocuments\": [\"https://example.com/salary-proof.pdf\"]\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/submit?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "submit"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Submit Real Person Verification",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"verificationType\": \"REALPERSON\",\n  \"description\": \"真人认证申请\",\n  \"verificationData\": {\n    \"livePhotoUrls\": [\"https://example.com/live1.jpg\", \"https://example.com/live2.jpg\"],\n    \"actionType\": \"手势验证\"\n  }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/submit?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "submit"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Verification Status",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v2/verification/status?userId=15",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v2",
                                "verification",
                                "status"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "15"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "// Standard assertions for Amoure APIs",
                                    "pm.test('HTTP Status should be 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response should be valid JSON', function () {",
                                    "    pm.response.to.be.json;",
                                    "});",
                                    "",
                                    "pm.test('Response should have success field', function () {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "});",
                                    "",
                                    "pm.test('Business logic should be successful', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success === false) {",
                                    "        console.log('❌ API Business Logic Failed:');",
                                    "        console.log('Error Code:', response.code);",
                                    "        console.log('Message:', response.msg);",
                                    "        console.log('Error Detail:', response.errorDetail);",
                                    "    }",
                                    "    pm.expect(response.success).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('Should not have system errors', function () {",
                                    "    const response = pm.response.json();",
                                    "    if (response.error) {",
                                    "        console.log('❌ System Error Found:', response.error);",
                                    "    }",
                                    "    pm.expect(response.error).to.be.oneOf([null, undefined, '']);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}